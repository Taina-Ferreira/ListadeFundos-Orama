{"version":3,"sources":["data/thunks/index.js","services/getFunds.js","components/TableFunds/TableBody/index.js"],"names":["thunks","dispatch","fetch","then","response","json","funds","setFunds","GroupMacro","React","lazy","connect","state","minAplication","filterMinimumAplication","redemption","filterRedemption","risk","filterRisk","fundName","filterFundName","strategies","filterStrategies","getAll","useEffect","selectFunds","filter","fund","name","simple_name","toLowerCase","includes","value","operability","minimum_initial_application_amount","parseFloat","range","specification","fund_risk_profile","score_range_order","retrieval_quotation_days","fixedIncome","isActive","differentStrategies","variableIncome","filterByMacroStrategy","fund_macro_strategy","id","macro","main","subgroups","sub","filterByStrategy","fund_main_strategy","fallback","colSpan"],"mappings":"0KAGMA,EACW,kBAAM,SAACC,GCFbC,MADK,mHACMC,MAAK,SAACC,GAAD,OAAcA,EAASC,UDG/BF,MAAK,SAACG,GAAD,OAAWL,EAASM,YAASD,S,eEC/CE,EAAaC,IAAMC,MAAK,kBAAM,gCAwGrBC,uBAdS,SAACC,GAAD,MAAY,CAChCN,MAAOM,EAAMN,MACbO,cAAeD,EAAME,wBACrBC,WAAYH,EAAMI,iBAClBC,KAAML,EAAMM,WACZC,SAAUP,EAAMQ,eAChBC,WAAYT,EAAMU,qBAGK,SAACrB,GAAD,MAAe,CACtCsB,OAAQ,kBAAMtB,EAASD,SAIZW,EAhGG,SAAC,GAA8E,IAA5EL,EAA2E,EAA3EA,MAAOa,EAAoE,EAApEA,SAAUN,EAA0D,EAA1DA,cAAeU,EAA2C,EAA3CA,OAAQR,EAAmC,EAAnCA,WAAYE,EAAuB,EAAvBA,KAAMI,EAAiB,EAAjBA,WAE3EG,qBAAU,WACND,MACF,IAEF,IAuDME,EAAcnB,EACCoB,QAAO,SAACC,GAAD,OAxDNC,EAwD6BD,EAAKE,YAtDnC,KAAbV,GAGOS,EAAKE,cAAcC,SAASZ,EAASW,eAL/B,IAACF,KAyDDF,QAAO,SAACC,GAAD,OAjDCK,EAiD6BL,EAAKM,YAAYC,mCAhDtDC,WAAWH,IAEHnB,EAAcuB,MAAMvB,EAAcmB,OAHnC,IAACA,KAkDRN,QAAO,SAACC,GAAD,OAAuBA,EAAKU,cAAcC,kBAAkBC,mBArCpEtB,EAAKe,SAsCJN,QAAO,SAACC,GAAD,OAA6BA,EAAKM,YAAYO,0BA1CtDzB,EAAWiB,SA4CVN,QAAO,SAACC,GAAD,OArCE,SAACK,GAC3B,OAAOA,GACH,KAAK,EACD,OAAOX,EAAWoB,YAAYC,SAClC,KAAK,EACD,OAAOrB,EAAWsB,oBAAoBD,SAC1C,KAAK,EACD,OAAOrB,EAAWuB,eAAeF,SACrC,QACI,OAAO,GA4BmBG,CAAsBlB,EAAKU,cAAcS,oBAAoBC,OAC9ErB,QAAO,SAACC,GAAD,OAzBH,SAACqB,EAAMC,GAE5B,OAAOD,GACH,KAAK,EAED,OADK3B,EAAWoB,YAAYS,UAAUxB,QAAO,SAACyB,GAAD,OAASA,EAAIJ,KAAOE,KAAM,GAC9DP,SACb,KAAK,EAED,OADKrB,EAAWsB,oBAAoBO,UAAUxB,QAAO,SAACyB,GAAD,OAASA,EAAIJ,KAAOE,KAAM,GACtEP,SACb,KAAK,EAED,OADKrB,EAAWuB,eAAeM,UAAUxB,QAAO,SAACyB,GAAD,OAASA,EAAIJ,KAAOE,KAAM,GACjEP,SACb,QACI,OAAO,GAYmBU,CAAiBzB,EAAKU,cAAcS,oBAAoBC,GAAGpB,EAAKU,cAAcgB,mBAAmBN,OAEvI,OACI,eAAC,QAAD,WACI,cAAC,WAAD,CAAUO,SAAU,6BAAI,oBAAIC,QAAQ,IAAZ,0BAAxB,SACI,cAAC/C,EAAD,CAAYwC,MAAO3B,EAAWoB,YAAahB,YAAaA,MAE5D,cAACjB,EAAD,CAAYwC,MAAO3B,EAAWsB,oBAAqBlB,YAAaA,IAChE,cAACjB,EAAD,CAAYwC,MAAO3B,EAAWuB,eAAgBnB,YAAaA","file":"static/js/5.ca832265.chunk.js","sourcesContent":["import { getFunds } from '../../services/getFunds'\r\nimport { setFunds } from '../actions'\r\n\r\nconst thunks = {\r\n    getAllFunds: () => (dispatch) => {\r\n        getFunds().then((funds) => dispatch(setFunds(funds)))\r\n    }\r\n}\r\n\r\nexport {thunks}","const getFunds = () => {\r\n    const url = 'https://s3.amazonaws.com/orama-media/json/fund_detail_full.json?limit=1000&offset=0&serializer=fund_detail_full'\r\n    return fetch(url).then((response) => response.json())\r\n}\r\n\r\nexport {getFunds}","import React, { useEffect, Suspense } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { thunks } from '../../../data/thunks'\r\n//import styled from 'styled-components'\r\nimport {Tbody} from 'react-super-responsive-table'\r\n\r\nconst GroupMacro = React.lazy(() => import('../GroupMacro'))\r\n\r\n/*\r\nconst Tbody = styled.tbody`\r\n    background-color: ${props => props.theme.colors.white};\r\n`;\r\n*/\r\n\r\nconst TableBody = ({ funds, fundName, minAplication, getAll, redemption, risk, strategies }) => {\r\n\r\n    useEffect(() => {\r\n        getAll()\r\n    },[])\r\n    \r\n    const filterByName = (name) => {\r\n\r\n        if (fundName === '')\r\n            return true\r\n        else\r\n            return name.toLowerCase().includes(fundName.toLowerCase())\r\n    }\r\n\r\n    const filterByApplication = (value) => {\r\n        const newValue = parseFloat(value)\r\n\r\n        const valueApplication = minAplication.range[minAplication.value]\r\n\r\n        return newValue <= valueApplication\r\n    }\r\n\r\n    const filterByRedemption = (value) => {\r\n        return value <= redemption.value\r\n    } \r\n\r\n    const filterByRisk = (value) => {\r\n        return value <= risk.value\r\n    }\r\n\r\n    const filterByMacroStrategy = (value) => {\r\n        switch(value){\r\n            case 1:\r\n                return strategies.fixedIncome.isActive\r\n            case 2:\r\n                return strategies.differentStrategies.isActive\r\n            case 3:\r\n                return strategies.variableIncome.isActive\r\n            default:\r\n                return true\r\n        }\r\n    }\r\n\r\n    const filterByStrategy = (macro,main) => {\r\n        var x\r\n        switch(macro){\r\n            case 1:\r\n                x =  strategies.fixedIncome.subgroups.filter((sub) => sub.id === main)[0]\r\n                return x.isActive\r\n            case 2:\r\n                x =  strategies.differentStrategies.subgroups.filter((sub) => sub.id === main)[0]\r\n                return x.isActive\r\n            case 3:\r\n                x =  strategies.variableIncome.subgroups.filter((sub) => sub.id === main)[0]\r\n                return x.isActive\r\n            default:\r\n                return true\r\n        }\r\n    }\r\n\r\n\r\n    const selectFunds = funds\r\n                        .filter((fund) => filterByName(fund.simple_name))\r\n                        .filter((fund) => filterByApplication(fund.operability.minimum_initial_application_amount))\r\n                        .filter((fund) => filterByRisk(fund.specification.fund_risk_profile.score_range_order))\r\n                        .filter((fund) => filterByRedemption(fund.operability.retrieval_quotation_days))\r\n                        //.filter((fund) => fund.orama_standard)\r\n                        .filter((fund) => filterByMacroStrategy(fund.specification.fund_macro_strategy.id))\r\n                        .filter((fund) => filterByStrategy(fund.specification.fund_macro_strategy.id,fund.specification.fund_main_strategy.id))\r\n\r\n    return (\r\n        <Tbody>\r\n            <Suspense fallback={<tr><td colSpan=\"8\">Loading...</td></tr>}>\r\n                <GroupMacro macro={strategies.fixedIncome} selectFunds={selectFunds}/>\r\n            </Suspense>\r\n            <GroupMacro macro={strategies.differentStrategies} selectFunds={selectFunds}/>\r\n            <GroupMacro macro={strategies.variableIncome} selectFunds={selectFunds}/>\r\n        </Tbody>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    funds: state.funds, \r\n    minAplication: state.filterMinimumAplication,\r\n    redemption: state.filterRedemption,\r\n    risk: state.filterRisk,\r\n    fundName: state.filterFundName,\r\n    strategies: state.filterStrategies\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getAll: () => dispatch(thunks.getAllFunds())\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( TableBody )"],"sourceRoot":""}